{
    "sublist": {
        "stdout": "\r[\u001b[34m  Info  \u001b[0m] Compiling with standard Scala 3.5.2 compiler front end...\n[\u001b[31m Error  \u001b[0m] results_stainless/codellama/CodeLlama-70b-Instruct-hf/sublist/generated_code.scala:5:59: Not found: type Eq\n             def isSublist[T](l1: List[T], l2: List[T])(implicit ev: Eq[T]): Boolean = {\n                                                                     \u001b[31m^\u001b[0m\n[\u001b[31m Error  \u001b[0m] results_stainless/codellama/CodeLlama-70b-Instruct-hf/sublist/generated_code.scala:5:59: Too many type arguments for <error Not found: type Eq>[]\n[\u001b[31m Error  \u001b[0m] expected: []\n[\u001b[31m Error  \u001b[0m] actual:   [T]\n             def isSublist[T](l1: List[T], l2: List[T])(implicit ev: Eq[T]): Boolean = {\n                                                                     \u001b[31m^\u001b[0m\n[\u001b[31m Error  \u001b[0m] results_stainless/codellama/CodeLlama-70b-Instruct-hf/sublist/generated_code.scala:17:47: Not found: type Eq\n             def reflexivity[T](l: List[T])(implicit ev: Eq[T]): Boolean = {\n                                                         \u001b[31m^\u001b[0m\n[\u001b[31m Error  \u001b[0m] results_stainless/codellama/CodeLlama-70b-Instruct-hf/sublist/generated_code.scala:17:47: Too many type arguments for <error Not found: type Eq>[]\n[\u001b[31m Error  \u001b[0m] expected: []\n[\u001b[31m Error  \u001b[0m] actual:   [T]\n             def reflexivity[T](l: List[T])(implicit ev: Eq[T]): Boolean = {\n                                                         \u001b[31m^\u001b[0m\n[\u001b[31m Error  \u001b[0m] results_stainless/codellama/CodeLlama-70b-Instruct-hf/sublist/generated_code.scala:18:20: No given instance of type <error Too many type arguments for <error Not found: type Eq>[]\n[\u001b[31m Error  \u001b[0m] expected: []\n[\u001b[31m Error  \u001b[0m] actual:   [T]> was found for parameter ev of method isSublist in object Sublist\n               isSublist(l, l) == true\n                              \u001b[31m^\u001b[0m\n[\u001b[31m Error  \u001b[0m] results_stainless/codellama/CodeLlama-70b-Instruct-hf/sublist/generated_code.scala:21:75: Not found: type Eq\n             def transitivity[T](l1: List[T], l2: List[T], l3: List[T])(implicit ev: Eq[T]): Boolean = {\n                                                                                     \u001b[31m^\u001b[0m\n[\u001b[31m Error  \u001b[0m] results_stainless/codellama/CodeLlama-70b-Instruct-hf/sublist/generated_code.scala:21:75: Too many type arguments for <error Not found: type Eq>[]\n[\u001b[31m Error  \u001b[0m] expected: []\n[\u001b[31m Error  \u001b[0m] actual:   [T]\n             def transitivity[T](l1: List[T], l2: List[T], l3: List[T])(implicit ev: Eq[T]): Boolean = {\n                                                                                     \u001b[31m^\u001b[0m\n[\u001b[31m Error  \u001b[0m] results_stainless/codellama/CodeLlama-70b-Instruct-hf/sublist/generated_code.scala:22:26: No given instance of type <error Too many type arguments for <error Not found: type Eq>[]\n[\u001b[31m Error  \u001b[0m] expected: []\n[\u001b[31m Error  \u001b[0m] actual:   [T]> was found for parameter ev of method isSublist in object Sublist\n               if (isSublist(l1, l2) && isSublist(l2, l3)) {\n                                    \u001b[31m^\u001b[0m\n[\u001b[31m Error  \u001b[0m] results_stainless/codellama/CodeLlama-70b-Instruct-hf/sublist/generated_code.scala:23:24: No given instance of type <error Too many type arguments for <error Not found: type Eq>[]\n[\u001b[31m Error  \u001b[0m] expected: []\n[\u001b[31m Error  \u001b[0m] actual:   [T]> was found for parameter ev of method isSublist in object Sublist\n                 isSublist(l1, l3) == true\n                                  \u001b[31m^\u001b[0m\n[\u001b[33mWarning \u001b[0m] 9 errors found\n\r[\u001b[34m  Info  \u001b[0m] Finished compiling\n[\u001b[31m Error  \u001b[0m] Stainless terminated with an error.\n",
        "stderr": "",
        "return_code": 2
    },
    "fibonacci": {
        "stdout": "\r[\u001b[34m  Info  \u001b[0m] Compiling with standard Scala 3.5.2 compiler front end...\r[\u001b[34m  Info  \u001b[0m] Finished compiling                                       \n\r[\u001b[34m  Info  \u001b[0m] Preprocessing the symbols...                             \r[\u001b[34m  Info  \u001b[0m] Preprocessing finished                                   \n\r[\u001b[34m  Info  \u001b[0m] Running phase ConstructsUsage                            \r[\u001b[34m  Info  \u001b[0m] Running phase PartialFunctions                           \r[\u001b[34m  Info  \u001b[0m] Running phase XlangLowering                              \r[\u001b[34m  Info  \u001b[0m] Running phase InnerClasses                               \r[\u001b[34m  Info  \u001b[0m] Running phase Laws                                       \r[\u001b[34m  Info  \u001b[0m] Running phase SuperInvariants                            \r[\u001b[34m  Info  \u001b[0m] Running phase SuperCalls                                 \r[\u001b[34m  Info  \u001b[0m] Running phase Sealing                                    \r[\u001b[34m  Info  \u001b[0m] Running phase MethodLifting                              \r[\u001b[34m  Info  \u001b[0m] Running phase MergeInvariants                            \r[\u001b[34m  Info  \u001b[0m] Running phase FieldAccessors                             \r[\u001b[34m  Info  \u001b[0m] Running phase ValueClasses                               \r[\u001b[34m  Info  \u001b[0m] Running phase MethodsLowering                            \r[\u001b[34m  Info  \u001b[0m] Running phase ExceptionLifting                           \r[\u001b[34m  Info  \u001b[0m] Running phase EffectElaboration                          \r[\u001b[34m  Info  \u001b[0m] Running phase AntiAliasing                               \r[\u001b[34m  Info  \u001b[0m] Running phase ReturnElimination                          \r[\u001b[34m  Info  \u001b[0m] Running phase ImperativeCodeElimination                  \r[\u001b[34m  Info  \u001b[0m] Running phase ImperativeCleanup                          \r[\u001b[34m  Info  \u001b[0m] Running phase AdtSpecialization                          \r[\u001b[34m  Info  \u001b[0m] Running phase RefinementLifting                          \r[\u001b[34m  Info  \u001b[0m] Running phase TypeEncoding                               \r[\u001b[34m  Info  \u001b[0m] Running phase InvariantInitialization                    \r[\u001b[34m  Info  \u001b[0m] Running phase FunctionClosure                            \r[\u001b[34m  Info  \u001b[0m] Running phase FunctionSpecialization                     \r[\u001b[34m  Info  \u001b[0m] Running phase UnfoldOpaque                               \r[\u001b[34m  Info  \u001b[0m] Running phase CallSiteInline                             \r[\u001b[34m  Info  \u001b[0m] Running phase ChooseInjector                             \r[\u001b[34m  Info  \u001b[0m] Running phase ChooseEncoder                              \r[\u001b[34m  Info  \u001b[0m] Running phase FunctionInlining                           \r[\u001b[34m  Info  \u001b[0m] Running phase TraceInductElimination                     \r[\u001b[34m  Info  \u001b[0m] Running phase SizedADTExtraction                         \r[\u001b[34m  Info  \u001b[0m] Running phase InductElimination                          \r[\u001b[34m  Info  \u001b[0m] Running phase MeasureInference                           \r[\u001b[34m  Info  \u001b[0m] Inferring measure for fibonacci...                       \r[\u001b[34m  Info  \u001b[0m] Running phase PartialEvaluation                          \r[\u001b[34m  Info  \u001b[0m] Finished lowering the symbols                            \n\r[\u001b[34m  Info  \u001b[0m] Generating VCs for 5 functions...                        \r[\u001b[34m  Info  \u001b[0m] Finished generating VCs                                  \n[\u001b[34m  Info  \u001b[0m] Starting verification...\n\r[\u001b[34m  Info  \u001b[0m]  Verified: 0 / 12\r[\u001b[34m  Info  \u001b[0m] Verifying: 12 verification conditions:\r[\u001b[34m  Info  \u001b[0m]  Verified: 1 / 12                     \n[\u001b[33mWarning \u001b[0m]  - Result for 'postcondition' VC for every3rdFibonacciEven @23:7:\n[\u001b[33mWarning \u001b[0m] n < BigInt(\"0\") || isEven(fibonacci(BigInt(\"3\") * n))\n[\u001b[33mWarning \u001b[0m] results_stainless/codellama/CodeLlama-70b-Instruct-hf/fibonacci/generated_code.scala:23:7:  => TIMEOUT\n             def every3rdFibonacciEven(n: BigInt): Boolean = {\n                 \u001b[31m^\u001b[0m\n\r[\u001b[34m  Info  \u001b[0m] Verifying: 12 verification conditions:\r[\u001b[34m  Info  \u001b[0m]  Verified: 1 / 12                     \r[\u001b[34m  Info  \u001b[0m]  Verified: 2 / 12                     \r[\u001b[34m  Info  \u001b[0m]  Verified: 3 / 12                     \n[\u001b[33mWarning \u001b[0m]  - Result for 'precond. (call fibonacci(n - BigInt(\"1\")))' VC for fibonacciCorrect @20:21:\n[\u001b[33mWarning \u001b[0m] n < BigInt(\"0\") || n - BigInt(\"1\") >= BigInt(\"0\")\n[\u001b[33mWarning \u001b[0m] results_stainless/codellama/CodeLlama-70b-Instruct-hf/fibonacci/generated_code.scala:20:21:  => INVALID\n               fibonacci(n) == fibonacci(n - 1) + fibonacci(n - 2)\n                               \u001b[31m^^^^^^^^^^^^^^^^\u001b[0m\n[\u001b[33mWarning \u001b[0m] Found counter-example:\n[\u001b[33mWarning \u001b[0m]   n: BigInt -> BigInt(\"0\")\n\r[\u001b[34m  Info  \u001b[0m]  Verified: 3 / 12\n[\u001b[33mWarning \u001b[0m]  - Result for 'precond. (call fibonacci(n - BigInt(\"2\")))' VC for fibonacciCorrect @20:40:\n[\u001b[33mWarning \u001b[0m] n < BigInt(\"0\") || n - BigInt(\"2\") >= BigInt(\"0\")\n[\u001b[33mWarning \u001b[0m] results_stainless/codellama/CodeLlama-70b-Instruct-hf/fibonacci/generated_code.scala:20:40:  => INVALID\n               fibonacci(n) == fibonacci(n - 1) + fibonacci(n - 2)\n                                                  \u001b[31m^^^^^^^^^^^^^^^^\u001b[0m\n[\u001b[33mWarning \u001b[0m] Found counter-example:\n[\u001b[33mWarning \u001b[0m]   n: BigInt -> BigInt(\"0\")\n\r[\u001b[34m  Info  \u001b[0m]  Verified: 3 / 12\n[\u001b[33mWarning \u001b[0m]  - Result for 'postcondition' VC for fibonacciCorrect @18:7:\n[\u001b[33mWarning \u001b[0m] n < BigInt(\"0\") || fibonacci(n) == fibonacci(n - BigInt(\"1\")) + fibonacci(n - BigInt(\"2\"))\n[\u001b[33mWarning \u001b[0m] results_stainless/codellama/CodeLlama-70b-Instruct-hf/fibonacci/generated_code.scala:18:7:  => TIMEOUT\n             def fibonacciCorrect(n: BigInt): Boolean = {\n                 \u001b[31m^\u001b[0m\n\r[\u001b[34m  Info  \u001b[0m]  Verified: 3 / 12\r[\u001b[34m  Info  \u001b[0m]  Verified: 4 / 12\r[\u001b[34m  Info  \u001b[0m]  Verified: 5 / 12\r[\u001b[34m  Info  \u001b[0m]  Verified: 6 / 12\r[\u001b[34m  Info  \u001b[0m]  Verified: 7 / 12\r[\u001b[34m  Info  \u001b[0m]  Verified: 8 / 12\n[\u001b[34m  Info  \u001b[0m] Done in 65.72s\n[\u001b[34m  Info  \u001b[0m]   \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n[\u001b[34m  Info  \u001b[0m] \u2554\u2550\u2561 \u001b[31mstainless summary\u001b[0m \u255e\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2557\n[\u001b[34m  Info  \u001b[0m] \u2551 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                                                                                                                                                                               \u2551\n[\u001b[34m  Info  \u001b[0m] \u2551 \u001b[33mresults_stainless/codellama/CodeLlama-70b-Instruct-hf/fibonacci/generated_code.scala:23:7: \u001b[0m   \u001b[33mevery3rdFibonacciEven\u001b[0m  \u001b[33mpostcondition\u001b[0m                               \u001b[33mtimeout\u001b[0m           \u001b[33mPfolio\u001b[0m      \u001b[33m30.0\u001b[0m \u2551\n[\u001b[34m  Info  \u001b[0m] \u2551 \u001b[32mresults_stainless/codellama/CodeLlama-70b-Instruct-hf/fibonacci/generated_code.scala:25:12: \u001b[0m  \u001b[32mevery3rdFibonacciEven\u001b[0m  \u001b[32mprecond. (call fibonacci(BigInt(\"3\") * n))\u001b[0m  \u001b[32mvalid\u001b[0m             \u001b[32mU:smt-cvc5\u001b[0m  \u001b[32m0.0\u001b[0m  \u2551\n[\u001b[34m  Info  \u001b[0m] \u2551 \u001b[32mresults_stainless/codellama/CodeLlama-70b-Instruct-hf/fibonacci/generated_code.scala:3:7: \u001b[0m    \u001b[32mfibonacci\u001b[0m              \u001b[32mnon-negative measure\u001b[0m                        \u001b[32mvalid\u001b[0m             \u001b[32mU:smt-z3\u001b[0m    \u001b[32m0.0\u001b[0m  \u2551\n[\u001b[34m  Info  \u001b[0m] \u2551 \u001b[32mresults_stainless/codellama/CodeLlama-70b-Instruct-hf/fibonacci/generated_code.scala:10:7: \u001b[0m   \u001b[32mfibonacci\u001b[0m              \u001b[32mmeasure decreases\u001b[0m                           \u001b[32mvalid\u001b[0m             \u001b[32mU:smt-z3\u001b[0m    \u001b[32m0.0\u001b[0m  \u2551\n[\u001b[34m  Info  \u001b[0m] \u2551 \u001b[32mresults_stainless/codellama/CodeLlama-70b-Instruct-hf/fibonacci/generated_code.scala:10:7: \u001b[0m   \u001b[32mfibonacci\u001b[0m              \u001b[32mprecond. (call fibonacci(n - BigInt(\"1\")))\u001b[0m  \u001b[32mvalid\u001b[0m             \u001b[32mU:smt-cvc5\u001b[0m  \u001b[32m0.0\u001b[0m  \u2551\n[\u001b[34m  Info  \u001b[0m] \u2551 \u001b[32mresults_stainless/codellama/CodeLlama-70b-Instruct-hf/fibonacci/generated_code.scala:10:26: \u001b[0m  \u001b[32mfibonacci\u001b[0m              \u001b[32mmeasure decreases\u001b[0m                           \u001b[32mvalid\u001b[0m             \u001b[32mU:smt-z3\u001b[0m    \u001b[32m0.0\u001b[0m  \u2551\n[\u001b[34m  Info  \u001b[0m] \u2551 \u001b[32mresults_stainless/codellama/CodeLlama-70b-Instruct-hf/fibonacci/generated_code.scala:10:26: \u001b[0m  \u001b[32mfibonacci\u001b[0m              \u001b[32mprecond. (call fibonacci(n - BigInt(\"2\")))\u001b[0m  \u001b[32mvalid\u001b[0m             \u001b[32mU:smt-cvc5\u001b[0m  \u001b[32m0.0\u001b[0m  \u2551\n[\u001b[34m  Info  \u001b[0m] \u2551 \u001b[33mresults_stainless/codellama/CodeLlama-70b-Instruct-hf/fibonacci/generated_code.scala:18:7: \u001b[0m   \u001b[33mfibonacciCorrect\u001b[0m       \u001b[33mpostcondition\u001b[0m                               \u001b[33mtimeout\u001b[0m           \u001b[33mPfolio\u001b[0m      \u001b[33m30.8\u001b[0m \u2551\n[\u001b[34m  Info  \u001b[0m] \u2551 \u001b[32mresults_stainless/codellama/CodeLlama-70b-Instruct-hf/fibonacci/generated_code.scala:20:5: \u001b[0m   \u001b[32mfibonacciCorrect\u001b[0m       \u001b[32mprecond. (call fibonacci(n))\u001b[0m                \u001b[32mvalid from cache\u001b[0m  \u001b[32m\u001b[0m            \u001b[32m0.0\u001b[0m  \u2551\n[\u001b[34m  Info  \u001b[0m] \u2551 \u001b[31mresults_stainless/codellama/CodeLlama-70b-Instruct-hf/fibonacci/generated_code.scala:20:21: \u001b[0m  \u001b[31mfibonacciCorrect\u001b[0m       \u001b[31mprecond. (call fibonacci(n - BigInt(\"1\")))\u001b[0m  \u001b[31minvalid\u001b[0m           \u001b[31mU:smt-cvc5\u001b[0m  \u001b[31m0.0\u001b[0m  \u2551\n[\u001b[34m  Info  \u001b[0m] \u2551 \u001b[31mresults_stainless/codellama/CodeLlama-70b-Instruct-hf/fibonacci/generated_code.scala:20:40: \u001b[0m  \u001b[31mfibonacciCorrect\u001b[0m       \u001b[31mprecond. (call fibonacci(n - BigInt(\"2\")))\u001b[0m  \u001b[31minvalid\u001b[0m           \u001b[31mU:smt-cvc5\u001b[0m  \u001b[31m0.0\u001b[0m  \u2551\n[\u001b[34m  Info  \u001b[0m] \u2551 \u001b[32mresults_stainless/codellama/CodeLlama-70b-Instruct-hf/fibonacci/generated_code.scala:15:9: \u001b[0m   \u001b[32misEven\u001b[0m                 \u001b[32mremainder by zero\u001b[0m                           \u001b[32mtrivial\u001b[0m           \u001b[32m\u001b[0m            \u001b[32m0.0\u001b[0m  \u2551\n[\u001b[34m  Info  \u001b[0m] \u255f\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2562\n[\u001b[34m  Info  \u001b[0m] \u2551 \u001b[31mtotal: 12   valid: 8    (1 from cache, 1 trivial) invalid: 2    unknown: 2    time:   60.99\u001b[0m                                                                                                         \u2551\n[\u001b[34m  Info  \u001b[0m] \u255a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u255d\n[\u001b[34m  Info  \u001b[0m] Verification pipeline summary:\n[\u001b[34m  Info  \u001b[0m]   cache, anti-aliasing, smt-cvc5, smt-z3, batched\n[\u001b[34m  Info  \u001b[0m] Shutting down executor service.\n",
        "stderr": "",
        "return_code": 1
    },
    "factorial": {
        "stdout": "\r[\u001b[34m  Info  \u001b[0m] Compiling with standard Scala 3.5.2 compiler front end...\r[\u001b[34m  Info  \u001b[0m] Finished compiling                                       \n\r[\u001b[34m  Info  \u001b[0m] Preprocessing the symbols...                             \r[\u001b[34m  Info  \u001b[0m] Preprocessing finished                                   \n\r[\u001b[34m  Info  \u001b[0m] Running phase ConstructsUsage                            \r[\u001b[34m  Info  \u001b[0m] Running phase PartialFunctions                           \r[\u001b[34m  Info  \u001b[0m] Running phase XlangLowering                              \r[\u001b[34m  Info  \u001b[0m] Running phase InnerClasses                               \r[\u001b[34m  Info  \u001b[0m] Running phase Laws                                       \r[\u001b[34m  Info  \u001b[0m] Running phase SuperInvariants                            \r[\u001b[34m  Info  \u001b[0m] Running phase SuperCalls                                 \r[\u001b[34m  Info  \u001b[0m] Running phase Sealing                                    \r[\u001b[34m  Info  \u001b[0m] Running phase MethodLifting                              \r[\u001b[34m  Info  \u001b[0m] Running phase MergeInvariants                            \r[\u001b[34m  Info  \u001b[0m] Running phase FieldAccessors                             \r[\u001b[34m  Info  \u001b[0m] Running phase ValueClasses                               \r[\u001b[34m  Info  \u001b[0m] Running phase MethodsLowering                            \r[\u001b[34m  Info  \u001b[0m] Running phase ExceptionLifting                           \r[\u001b[34m  Info  \u001b[0m] Running phase EffectElaboration                          \r[\u001b[34m  Info  \u001b[0m] Running phase AntiAliasing                               \r[\u001b[34m  Info  \u001b[0m] Running phase ReturnElimination                          \r[\u001b[34m  Info  \u001b[0m] Running phase ImperativeCodeElimination                  \r[\u001b[34m  Info  \u001b[0m] Running phase ImperativeCleanup                          \r[\u001b[34m  Info  \u001b[0m] Running phase AdtSpecialization                          \r[\u001b[34m  Info  \u001b[0m] Running phase RefinementLifting                          \r[\u001b[34m  Info  \u001b[0m] Running phase TypeEncoding                               \r[\u001b[34m  Info  \u001b[0m] Running phase InvariantInitialization                    \r[\u001b[34m  Info  \u001b[0m] Running phase FunctionClosure                            \r[\u001b[34m  Info  \u001b[0m] Running phase FunctionSpecialization                     \r[\u001b[34m  Info  \u001b[0m] Running phase UnfoldOpaque                               \r[\u001b[34m  Info  \u001b[0m] Running phase CallSiteInline                             \r[\u001b[34m  Info  \u001b[0m] Running phase ChooseInjector                             \r[\u001b[34m  Info  \u001b[0m] Running phase ChooseEncoder                              \r[\u001b[34m  Info  \u001b[0m] Running phase FunctionInlining                           \r[\u001b[34m  Info  \u001b[0m] Running phase TraceInductElimination                     \r[\u001b[34m  Info  \u001b[0m] Running phase SizedADTExtraction                         \r[\u001b[34m  Info  \u001b[0m] Running phase InductElimination                          \r[\u001b[34m  Info  \u001b[0m] Running phase MeasureInference                           \r[\u001b[34m  Info  \u001b[0m] Running phase PartialEvaluation                          \r[\u001b[34m  Info  \u001b[0m] Finished lowering the symbols                            \n\r[\u001b[34m  Info  \u001b[0m] Generating VCs for 3 functions...                        \r[\u001b[34m  Info  \u001b[0m] Finished generating VCs                                  \n[\u001b[34m  Info  \u001b[0m] Starting verification...\n\r[\u001b[34m  Info  \u001b[0m]  Verified: 0 / 0\n[\u001b[34m  Info  \u001b[0m] Done in 4.43s\n[\u001b[34m  Info  \u001b[0m]   \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n[\u001b[34m  Info  \u001b[0m] \u2554\u2550\u2561 \u001b[32mstainless summary\u001b[0m \u255e\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2557\n[\u001b[34m  Info  \u001b[0m] \u2551 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                                                                       \u2551\n[\u001b[34m  Info  \u001b[0m] \u255f\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2504\u2562\n[\u001b[34m  Info  \u001b[0m] \u2551 \u001b[32mtotal: 0    valid: 0    (0 from cache, 0 trivial) invalid: 0    unknown: 0    time:    0.00\u001b[0m \u2551\n[\u001b[34m  Info  \u001b[0m] \u255a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u255d\n[\u001b[34m  Info  \u001b[0m] Verification pipeline summary:\n[\u001b[34m  Info  \u001b[0m]   cache, anti-aliasing, smt-cvc5, smt-z3, batched\n[\u001b[34m  Info  \u001b[0m] Shutting down executor service.\n",
        "stderr": "",
        "return_code": 0
    }
}